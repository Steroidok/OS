	.file	"hello.c"                               ; Заголовочная строка, указывающая на исходный файл "hello.c"
	.globl	n                                       ; Объявление глобального символа "n"
	.data                                           ; Начало секции данных
	.align 4                                        ; Выравнивание данных по границе 4 байта
	.type	n, @object                              ; Определение типа символа "n" как объекта
	.size	n, 4                                    ; Указание размера символа "n" (4 байта)
n:
	.long	10                                      ; Инициализация символа "n" со значением 10
	.section	.rodata                         ; Начало секции только для чтения
.LC0:
	.string	"Hello, World!"                         ; Определение строки "Hello, World!" с меткой ".LC0"
.LC1:
	.string	"fact of %i is %i\n"                    ; Определение строки "fact of %i is %i\n" с меткой ".LC1"
	.text                                           ; Начало секции кода
	.globl	main                                    ; Объявление глобальной функции "main"
	.type	main, @function                         ; Определение "main" как функции
main:
.LFB0:
	.cfi_startproc                                  ; Начало процедуры "main"
	leal	4(%esp), %ecx
	.cfi_def_cfa 1, 0                               ; Загрузка адреса параметров командной строки в регистр %ecx
	andl	$-16, %esp                              ; Выравнивание стека по границе 16 байт
	pushl	-4(%ecx)
	pushl	%ebp
	.cfi_escape 0x10,0x5,0x2,0x75,0                 ; Сохранение значения регистра %ebp и адреса возврата в стеке
	movl	%esp, %ebp                              ; Установка указателя стека (регистр %ebp) на текущий адрес стека
	pushl	%ecx
	.cfi_escape 0xf,0x3,0x75,0x7c,0x6               ; Сохранение значения регистра %ecx в стеке
	subl	$4, %esp                                ; Выделение 4 байтов под локальную переменную
	subl	$12, %esp                               ; Выделение 12 байтов под сохранение аргументов функции
	pushl	$.LC0
	call	puts                                    ; Вызов функции puts для вывода строки "Hello, World!"
	addl	$16, %esp                               ; Освобождение выделенного места в стеке
	movl	n, %eax                                 ; Загрузка значения символа "n" в регистр %eax
	subl	$12, %esp                               ; Выделение 12 байтов под сохранение аргументов функции
	pushl	%eax
	call	fact                                    ; Вызов функции fact
	addl	$16, %esp                               ; Освобождение выделенного места в стеке
	movl	%eax, %edx                              ; Сохранение результата функции fact в регистр %edx
	movl	n, %eax                                 ; Загрузка значения символа "n" в регистр %eax
	subl	$4, %esp                                ; Выделение 4 байтов под локальную переменную
	pushl	%edx
	pushl	%eax
	pushl	$.LC1
	call	printf                                  ; Вызов функции printf для вывода форматированной строки
	addl	$16, %esp                               ; Освобождение выделенного места в стеке
	movl	$0, %eax                                ; Загрузка значения 0 в регистр %eax (возвращаемое значение функции)
	movl	-4(%ebp), %ecx                          
	.cfi_def_cfa 1, 0                               ; Загрузка значения регистра %ecx из стека
	leave
	.cfi_restore 5                                  ; Освобождение выделенного места в стеке и восстановление предыдущего указателя стека

	leal	-4(%ecx), %esp
	.cfi_def_cfa 4, 4                               ; Восстановление указателя стека
	ret
	.cfi_endproc                                    ; Конец процедуры "main"
.LFE0:
	.size	main, .-main                            ; Указание размера функции "main"
	.ident	"GCC: (Ubuntu 4.9.2-10ubuntu13) 4.9.2"  ; Идентификатор компилятора и его версия
	.section	.note.GNU-stack,"",@progbits    ; Секция, указывающая на свойства исполняемого файла
